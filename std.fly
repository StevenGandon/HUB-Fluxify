var _C_NULL_PTR = 0

class List [
    fun .init() [
        self->_c_ptr = _C_NULL_PTR
        self->_size = 0
    ]

    fun .del() [
        if (self->_c_ptr && self->_size) [
            __ccall("free", self->_c_ptr)
        ]
    ]

    fun append(_item) [
        var temp_size = 8 * (self->_size + 1)
        var temp_c_ptr = __ccall("malloc", temp_size->to_int())

        if (!self->_c_ptr) [
            self->_c_ptr = temp_c_ptr
        ] else [
            __ccall("memmove", temp_c_ptr, self->_c_ptr, self->_size * 8)
            __ccall("free", self->_c_ptr)
            self->_c_ptr = temp_c_ptr
        ]
        self->_size = self->_size + 1
    ]

    var _c_ptr
    var _size
]
