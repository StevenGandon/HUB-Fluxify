.\" Manpage for Fluxify VM.
.TH flvm 5 "15 April 2024" "1.0" "flvm man page"
.SH NAME
flvm \- Fluxify VM
.SH DESCRIPTION
Fluxify VM is an interpreter for .flo object files
.br

.br
here is the opcode of the differents instructions
.br
    ┌─────────────────────────────────────────────┐
    │                Instructions                 │
    ├─────────────────────────────────────────────┤
    │  Code   Name   Args                         │
    ├─────────────────────────────────────────────┤
    │  00     NOOP   00                           │
    │  01     ADD    02                           │
    │  02     SUB    02                           │
    │  03     MUL    02                           │
    │  04     DIV    02                           │
    │  05     MOD    02                           │
    │  06     AND    02                           │
    │  07     OR     02                           │
    │  08     XOR    02                           │
    │  09     EQ     02                           │
    │  0A     EE     02                           │
    │  0B     OO     02                           │
    │  0C     SUP    02                           │
    │  0D     INF    02                           │
    │  0E     ESU    02                           │
    │  0F     EIN    02                           │
    │  10     NEQ    02                           │
    │  43     REA    01                           │
    │  44     FEA    01                           │
    │  45     MFB    02                           │
    │  46     MBF    02                           │
    │  47     MCF    02                           │
    │  48     HALT   01                           │
    │  49     MPF    02                           │
    │  50     MFP    02                           │
    │  51     GLA    01                           │
    │  52     SWF    00                           │
    │  53     MIF    02                           │
    │  54     MFI    02                           │
    │  55     CVR    00                           │
    │  56     AVR    00                           │
    │  57     RST    01                           │
    │  58     MPC    01                           │
    │  59     FVR    01                           │
    │  60     NMPC   01                           │
    │  61     DPN    01                           │
    │  62     DSYM   01                           │
    │  63     CCALL  01                           │
    └─────────────────────────────────────────────┘

.br

.br
instructions are set in a table "Program" (0x02) containing all the instructions side by side
.br
  64 bits:
    ┌─────────────────────────────────────────────┐
    │                Program table                │
    ├─────────────────────────────────────────────┤
    │  Size   Name                                │
    ├─────────────────────────────────────────────┤
    │  08     Instruction                         │
    │  08     Arg0                                │
    │  08     Arg1                                │
    │  08     ...                                 │
    └─────────────────────────────────────────────┘
.br

.br
  32 bits:
    ┌─────────────────────────────────────────────┐
    │                Program table                │
    ├─────────────────────────────────────────────┤
    │  Size   Name                                │
    ├─────────────────────────────────────────────┤
    │  04     Instruction                         │
    │  04     Arg0                                │
    │  04     Arg1                                │
    │  04     ...                                 │
    └─────────────────────────────────────────────┘
.br

.br
instructions are referenced via another table "Label" (0x01) containing all reference to code segments
.br
  64 bits:
    ┌─────────────────────────────────────────────┐
    │                 Label table                 │
    ├─────────────────────────────────────────────┤
    │  Size   Name                                │
    ├─────────────────────────────────────────────┤
    │  01     Label name size                     │
    │  --     Label name                          │
    │  08     Refdest                             │
    └─────────────────────────────────────────────┘
.br

.br
  32 bits:
    ┌─────────────────────────────────────────────┐
    │                 Label table                 │
    ├─────────────────────────────────────────────┤
    │  Size   Name                                │
    ├─────────────────────────────────────────────┤
    │  01     Label name size                     │
    │  --     Label name                          │
    │  04     Refdest                             │
    └─────────────────────────────────────────────┘
.br

.br
contant datas are stored in a table "Constants" (0x03) that contain primitive C types such as:
numbers and strings
.br
  64 bits:
    ┌─────────────────────────────────────────────┐
    │               Constants table               │
    ├─────────────────────────────────────────────┤
    │  Size   Name                                │
    ├─────────────────────────────────────────────┤
    │  01     Value type                          │
    │  08     Value size                          │
    │  --     Value                               │
    └─────────────────────────────────────────────┘
.br

.br
  32 bits:
    ┌─────────────────────────────────────────────┐
    │               Constants table               │
    ├─────────────────────────────────────────────┤
    │  Size   Name                                │
    ├─────────────────────────────────────────────┤
    │  01     Value type                          │
    │  04     Value size                          │
    │  --     Value                               │
    └─────────────────────────────────────────────┘
.br

.br
Constant types :
    Int(): 0x01
    String(): 0x02
.br
