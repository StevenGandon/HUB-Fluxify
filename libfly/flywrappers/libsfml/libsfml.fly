var libname_fly = "/usr/lib64/libfly.so"
if libfly == 0
    var libfly = dllopen libname_fly

var init_window_sym = getsym libfly "init_window"
var destroy_window_sym = getsym libfly "destroy_window"
var clear_window_sym = getsym libfly "clear_window"
var display_window_sym = getsym libfly "display_window"
var quit_event_sym = getsym libfly "quit_event"
var get_window_width_sym = getsym libfly "get_window_width"
var get_window_height_sym = getsym libfly "get_window_height"
var set_window_framerate_sym = getsym libfly "set_window_framerate"

=> Rectangle
var create_rectangle_sym = getsym libfly "create_rectangle"
var draw_rectangle_sym = getsym libfly "draw_rectangle"
var destroy_rectangle_sym = getsym libfly "destroy_rectangle"
var move_rectangle_sym = getsym libfly "move_rectangle"

=> Circle
var create_circle_sym = getsym libfly "create_circle"
var draw_circle_sym = getsym libfly "draw_circle"
var destroy_circle_sym = getsym libfly "destroy_circle"
var move_circle_sym = getsym libfly "move_circle"

=> Text
var create_text_sym = getsym libfly "create_text"
var draw_text_sym = getsym libfly "draw_text"
var destroy_text_sym = getsym libfly "destroy_text"
var move_text_sym = getsym libfly "move_text"
var set_text_fond_sym = getsym libfly "set_text_fond"

=> Image
var create_image_sym = getsym libfly "create_image"
var draw_image_sym = getsym libfly "draw_image"
var destroy_image_sym = getsym libfly "destroy_image"
var move_image_sym = getsym libfly "move_image"

fun init_window(width, height, title) [
    return ccall init_window_sym width height title
]

fun destroy_window(window) [
    ccall destroy_window_sym window
]

fun clear_window(window) [
    ccall clear_window_sym window
]

fun display_window(window) [
    ccall display_window_sym window
]

fun quit_event(window) [
    return ccall quit_event_sym window
]

fun get_window_width(window) [
    return ccall get_window_width_sym window
]

fun get_window_height(window) [
    return ccall get_window_height_sym window
]

fun set_window_framerate(window, framerate) [
    ccall set_window_framerate_sym window framerate
]

=> Rectangle

fun create_rectangle(x, y, size_x, size_y, r, g, b, a) [
    return ccall create_rectangle_sym x y size_x size_y r g b a
]

fun draw_rectangle(window, rectangle) [
    ccall draw_rectangle_sym window rectangle
]

fun destroy_rectangle(rectangle) [
    ccall destroy_rectangle_sym rectangle
]

fun move_rectangle(rectangle, x, y) [
    ccall move_rectangle_sym rectangle x y
]

=> Circle

fun create_circle(x, y, radius, r, g, b, a) [
    return ccall create_circle_sym x y radius r g b a
]

fun draw_circle(window, circle) [
    ccall draw_circle_sym window circle
]

fun destroy_circle(circle) [
    ccall destroy_circle_sym circle
]

fun move_circle(circle, x, y) [
    ccall move_circle_sym circle x y
]

=> Text

fun draw_text(window, text) [
    ccall draw_text_sym window text
]

fun create_text(text, x, y, size, r, g, b, a) [
    return ccall create_text_sym text x y size r g b a
]

fun destroy_text(text) [
    ccall destroy_text_sym text
]

fun move_text(text, x, y) [
    ccall move_text_sym text x y
]

fun set_text_fond(text, font_path) [
    ccall set_text_fond_sym text font_path
]

=> Image

fun create_image(path, x, y) [
    return ccall create_image_sym path x y
]

fun draw_image(window, image) [
    ccall draw_image_sym window image
]

fun destroy_image(image) [
    ccall destroy_image_sym image
]

fun move_image(image, x, y) [
    ccall move_image_sym image x y
]
