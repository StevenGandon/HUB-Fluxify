var libflysfml = dllopen "/usr/lib64/libflysfml.so"

var init_window_sym = getsym libflysfml "init_window"
var destroy_window_sym = getsym libflysfml "destroy_window"
var clear_window_sym = getsym libflysfml "clear_window"
var display_window_sym = getsym libflysfml "display_window"
var quit_event_sym = getsym libflysfml "quit_event"
var get_window_width_sym = getsym libflysfml "get_window_width"
var get_window_height_sym = getsym libflysfml "get_window_height"
var set_window_framerate_sym = getsym libflysfml "set_window_framerate"

=> Rectangle
var create_rectangle_sym = getsym libflysfml "create_rectangle"
var draw_rectangle_sym = getsym libflysfml "draw_rectangle"
var destroy_rectangle_sym = getsym libflysfml "destroy_rectangle"
var move_rectangle_sym = getsym libflysfml "move_rectangle"

=> Circle
var create_circle_sym = getsym libflysfml "create_circle"
var draw_circle_sym = getsym libflysfml "draw_circle"
var destroy_circle_sym = getsym libflysfml "destroy_circle"
var move_circle_sym = getsym libflysfml "move_circle"

=> Text
var create_text_sym = getsym libflysfml "create_text"
var draw_text_sym = getsym libflysfml "draw_text"
var destroy_text_sym = getsym libflysfml "destroy_text"
var move_text_sym = getsym libflysfml "move_text"
var set_text_fond_sym = getsym libflysfml "set_text_fond"

=> Image
var create_image_sym = getsym libflysfml "create_image"
var draw_image_sym = getsym libflysfml "draw_image"
var destroy_image_sym = getsym libflysfml "destroy_image"
var move_image_sym = getsym libflysfml "move_image"

fun init_window(width, height, title) [
    return ccall init_window_sym width height title
]

fun destroy_window(window) [
    ccall destroy_window_sym window
]

fun clear_window(window) [
    ccall clear_window_sym window
]

fun display_window(window) [
    ccall display_window_sym window
]

fun quit_event(window) [
    return ccall quit_event_sym window
]

fun get_window_width(window) [
    return ccall get_window_width_sym window
]

fun get_window_height(window) [
    return ccall get_window_height_sym window
]

fun set_window_framerate(window, framerate) [
    ccall set_window_framerate_sym window framerate
]

=> Rectangle

fun create_rectangle(x, y, size_x, size_y, r, g, b, a) [
    return ccall create_rectangle_sym x y size_x size_y r g b a
]

fun draw_rectangle(window, rectangle) [
    ccall draw_rectangle_sym window rectangle
]

fun destroy_rectangle(rectangle) [
    ccall destroy_rectangle_sym rectangle
]

fun move_rectangle(rectangle, x, y) [
    ccall move_rectangle_sym rectangle x y
]

=> Circle

fun create_circle(x, y, radius, r, g, b, a) [
    return ccall create_circle_sym x y radius r g b a
]

fun draw_circle(window, circle) [
    ccall draw_circle_sym window circle
]

fun destroy_circle(circle) [
    ccall destroy_circle_sym circle
]

fun move_circle(circle, x, y) [
    ccall move_circle_sym circle x y
]

=> Text

fun draw_text(window, text) [
    ccall draw_text_sym window text
]

fun create_text(text, x, y, size, r, g, b, a) [
    return ccall create_text_sym text x y size r g b a
]

fun destroy_text(text) [
    ccall destroy_text_sym text
]

fun move_text(text, x, y) [
    ccall move_text_sym text x y
]

fun set_text_fond(text, font_path) [
    ccall set_text_fond_sym text font_path
]

=> Image

fun create_image(path, x, y) [
    return ccall create_image_sym path x y
]

fun draw_image(window, image) [
    ccall draw_image_sym window image
]

fun destroy_image(image) [
    ccall destroy_image_sym image
]

fun move_image(image, x, y) [
    ccall move_image_sym image x y
]

fun main(window_size_x, window_size_y) [
    var window_name = init_window(window_size_x, window_size_y, "Test")

    var rectangle = create_rectangle(100, 100, 50, 50, 255, 0, 0, 255)
    set_window_framerate(window_name, 100)
    var rect_x = 100
    var rect_y = 100
    var rect_dx = 1
    var rect_dy = 1
    var temp = 1

    while quit_event(window_name) == 0 [
        clear_window(window_name)
        draw_rectangle(window_name, rectangle)

        => Moving logic
        rect_x = rect_x + rect_dx
        rect_y = rect_y + rect_dy
        move_rectangle(rectangle, rect_x, rect_y)
        if rect_x >= 750 || rect_x <= 0 [
            rect_dx = -rect_dx
        ]
        if rect_y >= 550 || rect_y <= 0 [
            rect_dy = -rect_dy
        ]

        display_window(window_name)
    ]

    destroy_rectangle(rectangle)
    destroy_window(window_name)
]

main(1920, 1080)