var libname = "libfly/libfly.so"
var libstd = dllopen libname

var wout_sym = getsym libstd "wout"
var werr_sym = getsym libstd "werr"
var strlen_sym = getsym libstd "ft_len"
var to_str_sym = getsym libstd "to_str"
var exit_sym = getsym libstd "quit"

var dupli_sym = getsym libstd "duplicate_process"
var getpid_sym = getsym libstd "get_pid"
var print_sym = getsym libstd "print"

fun get_pid() [
    return ccall getpid_sym
]

fun duplicate_process() [
    return ccall dupli_sym
]

fun print(text, stdway, flush) [
    return ccall print_sym text stdway flush
]

fun quit(code) [
    return ccall exit_sym code
]

fun strlen(text) [
    return ccall strlen_sym text
]

fun wout(text, flush) [
    return ccall wout_sym text flush
]

fun werr(text, flush) [
    return ccall werr_sym text flush
]

fun to_str(num) [
    return ccall to_str_sym num
]

fun main() [
    var test = 5
    => test--
    wout(to_str(test), 1)
    wout("Helloword!", 1)
]

main()
