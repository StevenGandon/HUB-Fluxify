var libflystd = dllopen "/usr/lib64/libfly.so"

var wout_sym = getsym libflystd "wout"
var werr_sym = getsym libflystd "werr"
var strlen_sym = getsym libflystd "ft_len"
var to_str_sym = getsym libflystd "to_str"
var exit_sym = getsym libflystd "quit"

var dupli_sym = getsym libflystd "duplicate_process"
var getpid_sym = getsym libflystd "get_pid"
var print_sym = getsym libflystd "print"
var read_file_sym = getsym libflystd "read_file"
var write_file_sym = getsym libflystd "write_file"
var run_cmd_sym = getsym libflystd "run_command"
var read_stdin_sym = getsym libflystd "read_stdin"
var absolute_path_sym = getsym libflystd "get_absolute_path"

fun get_pid() [
    return ccall getpid_sym
]

fun duplicate_process() [
    return ccall dupli_sym
]

fun print(text, stdway, flush) [
    return ccall print_sym text stdway flush
]

fun read_file(file) [
    return ccall read_file_sym file
]

fun write_file(file, text) [
    return ccall write_file_sym file text
]

fun run_command(cmd) [
    return ccall run_cmd_sym cmd
]

fun read_stdin(str, size) [
    return ccall read_stdin_sym str size
]

fun get_absolute_path(path) [
    return ccall absolute_path_sym path
]

fun quit(code) [
    return ccall exit_sym code
]

fun strlen(text) [
    return ccall strlen_sym text
]

fun wout(text, flush) [
    return ccall wout_sym text flush
]

fun werr(text, flush) [
    return ccall werr_sym text flush
]

fun to_str(num) [
    return ccall to_str_sym num
]

var init_window_sym = getsym libflystd "init_window"
var destroy_window_sym = getsym libflystd "destroy_window"
var clear_window_sym = getsym libflystd "clear_window"
var display_window_sym = getsym libflystd "display_window"
var quit_event_sym = getsym libflystd "quit_event"
var get_window_width_sym = getsym libflystd "get_window_width"
var get_window_height_sym = getsym libflystd "get_window_height"
var set_window_framerate_sym = getsym libflystd "set_window_framerate"

=> Rectangle
var create_rectangle_sym = getsym libflystd "create_rectangle"
var draw_rectangle_sym = getsym libflystd "draw_rectangle"
var destroy_rectangle_sym = getsym libflystd "destroy_rectangle"
var move_rectangle_sym = getsym libflystd "move_rectangle"

=> Circle
var create_circle_sym = getsym libflystd "create_circle"
var draw_circle_sym = getsym libflystd "draw_circle"
var destroy_circle_sym = getsym libflystd "destroy_circle"
var move_circle_sym = getsym libflystd "move_circle"

=> Text
var create_text_sym = getsym libflystd "create_text"
var draw_text_sym = getsym libflystd "draw_text"
var destroy_text_sym = getsym libflystd "destroy_text"
var move_text_sym = getsym libflystd "move_text"
var set_text_fond_sym = getsym libflystd "set_text_fond"

=> Image
var create_image_sym = getsym libflystd "create_image"
var draw_image_sym = getsym libflystd "draw_image"
var destroy_image_sym = getsym libflystd "destroy_image"
var move_image_sym = getsym libflystd "move_image"

fun init_window(width, height, title) [
    return ccall init_window_sym width height title
]

fun destroy_window(window) [
    ccall destroy_window_sym window
]

fun clear_window(window) [
    ccall clear_window_sym window
]

fun display_window(window) [
    ccall display_window_sym window
]

fun quit_event(window) [
    return ccall quit_event_sym window
]

fun get_window_width(window) [
    return ccall get_window_width_sym window
]

fun get_window_height(window) [
    return ccall get_window_height_sym window
]

fun set_window_framerate(window, framerate) [
    ccall set_window_framerate_sym window framerate
]

=> Rectangle

fun create_rectangle(x, y, size_x, size_y, r, g, b, a) [
    return ccall create_rectangle_sym x y size_x size_y r g b a
]

fun draw_rectangle(window, rectangle) [
    ccall draw_rectangle_sym window rectangle
]

fun destroy_rectangle(rectangle) [
    ccall destroy_rectangle_sym rectangle
]

fun move_rectangle(rectangle, x, y) [
    ccall move_rectangle_sym rectangle x y
]

=> Circle

fun create_circle(x, y, radius, r, g, b, a) [
    return ccall create_circle_sym x y radius r g b a
]

fun draw_circle(window, circle) [
    ccall draw_circle_sym window circle
]

fun destroy_circle(circle) [
    ccall destroy_circle_sym circle
]

fun move_circle(circle, x, y) [
    ccall move_circle_sym circle x y
]

=> Text

fun draw_text(window, text) [
    ccall draw_text_sym window text
]

fun create_text(text, x, y, size, r, g, b, a) [
    return ccall create_text_sym text x y size r g b a
]

fun destroy_text(text) [
    ccall destroy_text_sym text
]

fun move_text(text, x, y) [
    ccall move_text_sym text x y
]

fun set_text_fond(text, font_path) [
    ccall set_text_fond_sym text font_path
]

=> Image

fun create_image(path, x, y) [
    return ccall create_image_sym path x y
]

fun draw_image(window, image) [
    ccall draw_image_sym window image
]

fun destroy_image(image) [
    ccall destroy_image_sym image
]

fun move_image(image, x, y) [
    ccall move_image_sym image x y
]
